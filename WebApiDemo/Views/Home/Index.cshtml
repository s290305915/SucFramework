@*<div class="jumbotron">
        <h1>ASP.NET</h1>
        <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS, and JavaScript.</p>
        <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
    </div>
    <div class="row">
        <div class="col-md-4">
            <h2>Getting started</h2>
            <p>ASP.NET Web API is a framework that makes it easy to build HTTP services that reach
            a broad range of clients, including browsers and mobile devices. ASP.NET Web API
            is an ideal platform for building RESTful applications on the .NET Framework.</p>
            <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301870">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Get more libraries</h2>
            <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
            <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301871">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Web Hosting</h2>
            <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
            <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301872">Learn more &raquo;</a></p>
        </div>
    </div>*@

<div id="body">
    <link href="~/Content/reveal.css" rel="stylesheet" />

    <script src="~/Scripts/jquery.min.js"></script>
    <script>
        //用于保存用户输入数据
        var Role = {
            create: function () {
                id: "";
                Name: "";
                Remark: "";
                Type: "";
                Level: "";
                return Role;
            }
        }


        $(function () {

            //加载数据
            BindTable();

            //添加一条记录 请求类型:POST  请求url:  /api/Role
            //请求到RoleController.cs中的 public HttpResponseMessage PostRole(Roles item) 方法
            $("#addItem").click(function () {
                var newRole = Role.create();
                newRole.Name = $("#name").val();
                newRole.Remark = $("#remark").val();
                newRole.Type = $("#type").val();
                newRole.Level = $("#level").val();

                $.ajax({
                    url: "/api/Role",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(newRole),
                    success: function () {
                        alert("添加成功！");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("请求失败，消息：" + textStatus + "  " + errorThrown);
                    }
                });
            });


            //先根据Id查询记录  请求类型:GET  请求url:  /api/Role/Id
            //请求到RolesController.cs中的 public Product GetRole(int id) 方法
            $("#showItem").click(function () {
                debugger;
                var inputId = $("#id2").val();
                $("#name2").val("");
                $("#remark2").val("");
                $("#type2").val("");
                $("#level2").val("");
                $.ajax({
                    url: "/api/Role/" + inputId,
                    type: "GET",
                    contentType: "application/json; charset=urf-8",
                    success: function (data) {
                        $("#name2").val(data.Name);
                        $("#remark2").val(data.Remark);
                        $("#type2").val(data.Type);
                        $("#level2").val(data.Level);
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("请求失败，消息：" + textStatus + "  " + errorThrown);
                    }
                });
            });

            //修改该Id的记录 请求类型:PUT  请求url:  /api/Role/Id
            //请求到RoleController.cs中的 public void PutProduct(int id, Role role) 方法
            $("#editItem").click(function () {
                var inputId = $("#id2").val();
                var newRole = Role.create();
                newRole.Name = $("#name2").val();
                newRole.Remark = $("#remark2").val();
                newRole.Type = $("#type2").val();
                newRole.Level = $("#level2").val();

                $.ajax({
                    url: "/api/Role/" + inputId,
                    type: "PUT",
                    data: JSON.stringify(newRole),
                    contentType: "application/json; charset=urf-8",
                    success: function () {
                        alert("修改成功！ ");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("请求失败，消息：" + textStatus + "  " + errorThrown);
                    }
                });
            });


            //删除输入Id的记录  请求类型:DELETE  请求url:  /api/Role/Id
            //请求到RoleController.cs中的  public void DeleteRole(int id) 方法
            $("#removeItem").click(function () {
                var inputId = $("#id2").val();
                $.ajax({
                    url: "/api/Role/" + inputId,
                    type: "DELETE",
                    contentType: "application/json; charset=uft-8",
                    success: function (data) {
                        alert("Id为 " + inputId + " 的记录删除成功！");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("请求失败，消息：" + textStatus + "  " + errorThrown);
                    }
                });
            });
        });


        function BindTable() {
            $('#divlist').bootstrapTable({
                url: '/api/Role/AllList',
                type: "GET",
                pagination: true,
                showRefresh: true,
                showColumns: true,
                showFooter: true,
                showHeader: true,
                search: true,
                columns: [
                { field: 'ID', title: 'ID' },
                { field: 'NAME', title: '姓名', formatter: nameFormatter },
                { field: 'REMARK', title: '备注' },
                { field: 'TYPE', title: '类别' },
                { field: 'LEVEL', title: '等级' },
                {
                    field: "ID", title: "操作", width: "150",
                    formatter: function (value) {
                        return "<img src='Content/img/gear_in.png' title='修改' onclick = 'ModifybyId(" + value + ")' style='cursor:hand'></img>"
                            + "&nbsp;&nbsp;&nbsp;&nbsp;" +
                               "<img src='Content/img/cancel.png' title='删除' onclick='DeletebyId(" + value + ")'  style='cursor:hand'></img>";
                    }
                }]
            });

        }

        function DeletebyId(v) {
            alert(v);
        }
        //
        function ModifybyId(v) {
            $('#Excute').reveal();
        }

        function nameFormatter(value) {
            return "♥-" + value + "-😘";
        }
    </script>
    <div id="divlist"></div>
    <section>
        <h2>添加记录</h2>
        Id：<input id="id" type="text" /><br />
        Name:<input id="name" type="text" /><br />
        Remark:<input id="remark" type="text" />
        Type:<input id="type" type="text" /><br />
        Level:<input id="level" type="text" /><br />
        <input id="addItem" type="button" value="添加" />
    </section>

    <section>
        <br />
        <br />
        <h2>修改记录</h2>
        Id：<input id="id2" type="text" /><br />
        Name:<input id="name2" type="text" /><br />
        Remark:<input id="remark2" type="text" />
        Type:<input id="type2" type="text" /><br />
        Level:<input id="level2" type="text" /><br />
        <input id="showItem" type="button" value="查询" />
        <input id="editItem" type="button" value="修改" />
        <input id="removeItem" type="button" value="删除" />
    </section>

    <div id="Excute" class="reveal-modal">
        <h1>弹出</h1>
        <p id="Content">
            需要修改自己做一个弹窗<br />
        </p>
        <a class="close-reveal-modal">&#215;</a>
    </div>

</div>
